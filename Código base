Construção do primeiro código usado como base:

Classe CONTROLLER:

import javafx.stage.Stage;
import javafx.event.Event;
import javafx.scene.control.TextField;
import javafx.scene.control.Label;
public class CALCULADORAController
{
    CALCULADORAView calculadoraView;
    Stage stage;
    CALCULADORA calculadora;
    public TextField textFieldPotencia;
    public TextField textFieldHoras;
    public TextField textFieldDias;
    public Label labelResultado;
    
    /**
     * Construtor para objetos da classe CalculadoraController
     */
    public CALCULADORAController()
    {
        this.stage = new Stage();
        this.calculadoraView = new CALCULADORAView();
        this.calculadoraView.setController(this);
    }
    
    public void iniciar() throws Exception {
        this.calculadoraView.start(this.stage);
        this.stage.show();
    }
    
    public void botaoCalcularClicado(Event e) {
        try {
            double Potencia = Double.parseDouble(textFieldPotencia.getText());
            double Horas = Double.parseDouble(textFieldHoras.getText());
            double Dias = Double.parseDouble(textFieldDias.getText());
            CALCULADORA calculadora = new CALCULADORA(Potencia, Horas, Dias);
            this.labelResultado.setText(calculadora.interpretar());
        } catch (NumberFormatException exception) {
            labelResultado.setText("Dados de entrada incompletos ou inválidos");
        }
    }
    
    public void botaoLimparClicado(Event e) {
        textFieldPotencia.setText("");
        textFieldHoras.setText("");
        textFieldDias.setText("");
        labelResultado.setText("");
    }    
}

Classe VIEW:
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.layout.Pane;
import javafx.stage.Stage;
import java.io.File;
import java.net.URL;

/**
 * Interface Gráfica (GUI) da Calculadora de IMC
 
 */
public class CALCULADORAView extends Application
{
    private FXMLLoader loader;
    private URL url;
    
    public CALCULADORAView() {
        this.loader = new FXMLLoader();
        try {
            this.url = new File("TelaEficienciaSetor.fxml").toURI().toURL();
        } catch (Exception e) {
            System.out.println("Erro na carga do FXML:" + e);
        }
        this.loader.setLocation(this.url);        
    }
    
    public void setController(CALCULADORAController controller) {
        this.loader.setController(controller);
    }
    
    @Override
    public void start(Stage primaryStage) throws Exception {
        Pane pane = loader.<Pane>load();
        Scene scene = new Scene(pane);
        primaryStage.setScene(scene);
        // primaryStage.show();
    }
}
Contrução da calculadora 1:
public class CALCULADORA
{
    double Potencia;
    double Horas;
    double Dias;
    public CALCULADORA() {
        this.Potencia = 0;
        this.Horas = 0;
        this.Dias = 0;
    }
    
    /**
     * Construtor para objetos da classe Calculadora
     */
    public CALCULADORA(double Potencia, double Horas, double Dias )
    {
        this.Potencia = Potencia;  
        this.Horas = Horas;
        this.Dias = Dias;
    }

    /**
     * Calcula o consumo mensal de um motor
     * 
     * @return     O valor da potência, dado por: potência * horas * dias
     */
    public double calcular()
    {
        if (this.Potencia <= 0 || this.Horas <= 0|| this.Horas <= 0)
            return 0;
            return (this.Potencia * this.Horas * this.Dias)/1000;
        }
        public String interpretar()
    {
        String resultado = "";
        double calculadora = this.calcular();
        if (calculadora == 0)
            resultado += "Dados incompletos ou inválidos";
        return resultado + "kWa";
    }
    }
Contrução da Calculadora 2:
public class Calculadora2 extends CALCULADORA
    {
    double Potencia;
    double PSaída;
    double PEntrada;
    public Calculadora2() {
        this.Potencia = 0;
        this.PSaída = 0;
        this.PEntrada = 0;
    }
    
    public Calculadora2(double Potencia, double PSaída, double PEntrada )
    {
        this.Potencia = Potencia;
        this. PSaída = PSaída;
        this. PEntrada = PEntrada;
    }

    public double calcular()
    {
         if (this.Potencia <= 0 || this.PSaída <= 0|| this.PEntrada <= 0)
            return 0;
            return this. PSaída/this. PEntrada;
    }
     public String interpretar()
    {
        String resultado = "";
        double Calculadora2 = this.calcular();
        if (Calculadora2 == 0)
            resultado += "Dados incompletos ou inválidos";
        else if (Calculadora2 >=0.85 )
            resultado += "O equipamento está em boas condições de uso e eficiência";
        else if (Calculadora2 < 0.85)
        resultado += "O equipamento está em más condições de uso e eficiência";
        return resultado;
    
    }
}
